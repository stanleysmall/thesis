% Reading from file multidim_space_voids/input/voids_extended.p9


formulas(sos).
(all x all y (hostsh(x,y) <-> hostsv(x,y) & ICon(r(x)))).
(all x all y (hostsg(x,y) <-> hostsv(x,y) & -ICon(r(x)))).
(all y (Hole(y) <-> (exists x hostsh(x,y)))).
(all y (Gap(y) <-> (exists x hostsg(x,y)))).
(all x all v (hostsv(x,v) -> op(x,v) = intersection(r(v),difference(U,sum(r(x),r(v)))))).
(all x all y (hostscavity(x,y) <-> hostsv(x,y) & -Covers(r(x),op(x,y)))).
(all y (CAVITY(y) <-> (exists x hostscavity(x,y)))).
(all x all y (hostscavityi(x,y) <-> hostscavity(x,y) & ZEX(op(x,y)))).
(all x all y (hostscavityt(x,y) <-> hostscavity(x,y) & -ZEX(op(x,y)))).
(all x all y (hostshollow(x,y) <-> hostsv(x,y) & Covers(r(x),op(x,y)) & ICon(op(x,y)))).
(all y (HOL(y) <-> (exists x hostshollow(x,y)))).
(all x all y (hoststunnel(x,y) <-> hostsv(x,y) & Covers(r(x),op(x,y)) & -ICon(op(x,y)))).
(all y (TUN(y) <-> (exists x hoststunnel(x,y)))).
(all x all y (hostsve(x,y) <-> hostsv(x,y) & (exists z (P(z,op(x,y)) & (all u (hostsv(x,u) & EqDim(intersection(z,r(u)),z) -> PO(r(y),r(u)) & Cont(intersection(z,r(u)),op(x,u)))))))).
(all x all y (hostsvi(x,y) <-> hostsv(x,y) & -hostsve(x,y))).
(all v all o (PO(v,porespace(o)) <-> (exists m (DK1(m,o) & (all u (hostsv(o,u) -> -PO(v,r(u)))) & (exists u (hostsv(m,u) & PO(v,r(u)))))))).
(all v all o (PO(v,voidspace(o)) <-> PO(v,porespace(o)) | (exists u (hostsv(o,u) & PO(v,r(u)))))).
(all o (-ZEX(porespace(o)) -> (exists v exists m (r(v) = porespace(o) & hostsv(m,v) & DK1(m,o))))).
(all o (-ZEX(voidspace(o)) -> (exists v exists m (r(v) = voidspace(o) & hostsv(m,v) & DK1(m,o))))).
(all v all o (PO(v,convoidspace(o)) <-> (exists u (PO(v,u) & ICon(u) & Cont(u,voidspace(o)) & StrongC(u,difference(Uni,sum(r(o),voidspace(o)))))))).
(all v all o (PO(v,conporespace(o)) <-> (exists u (PO(v,u) & ICon(u) & Cont(u,porespace(o)) & StrongC(u,difference(Uni,sum(r(o),porespace(o)))))))).
end_of_list.

% Reading from file multidim_space_voids/input/voids.p9


formulas(sos).
(all x all y (VS(x,y) <-> PED(x) & S(y) & Cont(y,ch(x)) & -PO(y,r(x)))).
(all x all y (SimpleV(y) <-> ICon(r(y)) & (exists x hostsv(x,y)))).
(all x all y (ComplexV(y) <-> -ICon(r(y)) & (exists x hostsv(x,y)))).
(all x (V(x) <-> SimpleV(x) | ComplexV(x))).
(all x all y (hostsv(x,y) -> hosts(x,y) & VS(x,r(y)) & StrongC(r(x),r(y)))).
(all x all y all z (hostsv(x,y) & ComplexV(y) & PO(r(z),r(y)) -> (exists v (hostsv(x,v) & SimpleV(v) & PO(r(z),r(v)))))).
(all x all y (hosts(x,y) & V(y) -> -V(x))).
(all x all y (hostsv(x,y) & RPF(x) -> (exists z (hosts(z,x) & -F(z) & hostsv(z,y))))).
(all x all y (hostsv(x,y) & -F(x) -> (exists z (hosts(x,z) & RPF(z) & hostsv(z,y))))).
(all x all y all z (hostsv(x,y) & hostsv(x,z) & PO(r(y),r(z)) -> Cont(r(y),r(z)) | Cont(r(z),r(y)))).
(all x all y all v (hostsv(x,y) & P(r(x),r(y)) & PED(y) & -DPF(y) & -Cont(r(v),r(y)) -> (exists u (Cont(difference(r(v),r(y)),r(u)) & hostsv(y,u))))).
(all x all y all v (hostsv(x,v) & P(r(y),r(x)) & PED(y) & -DPF(y) & PO(r(v),ch(y)) -> (exists u (r(u) = intersection(r(v),ch(y)) & hostsv(y,u))))).
end_of_list.

% Reading from file  multidim_space_spch/input/spch.p9


formulas(sos).
(all x S(ch(x))).
(all x ch(x) = ch(r(x))).
(all x (-ZEX(x) -> ICon(ch(x)))).
(all x ch(x) = ch(ch(x))).
(all x (-ZEX(x) -> Cont(r(x),ch(x)))).
(all x (-ZEX(x) & -Closed(r(x)) -> TCont(r(x),ch(x)))).
(all x all y (Cont(r(x),r(y)) -> Cont(ch(x),ch(y)))).
(all x all y (ch(x) = ch(y) & -ZEX(x) -> C(r(x),r(y)))).
(all x all y (MaxDim(r(x)) & MaxDim(r(y)) & r(x) = ch(x) & r(y) = ch(y) -> intersection(ch(x),ch(y)) = ch(intersection(ch(x),ch(y))))).
(all x all y (ICont(r(x),r(y)) & -Closed(difference(r(y),r(x))) -> difference(r(y),r(x)) != ch(difference(r(y),r(x))))).
(all x all y (ICont(r(x),r(y)) & MaxDim(r(x)) & MaxDim(r(y)) -> Cont(r(x),ch(difference(r(y),r(x)))))).
(all x all y (-ZEX(x) | -ZEX(y) -> (exists z exists v (TSum(r(x),r(y),r(z)) & TSum(ch(x),ch(y),r(v)) & Cont(v,ch(z)))))).
(all x all y all z all v all w (EqDim(x,y) & EqDim(y,z) & SC(x,y) & SC(y,z) & -C(x,z) & TSum(x,y,v) & TSum(y,z,w) & v = ch(v) & w = ch(w) -> y = ch(y))).
end_of_list.

% Reading from file multidim_space_space/input/space.p9


formulas(sos).
(all x (-PED(x) | -S(x))).
(all x S(r(x))).
(all x (S(x) <-> x = r(x))).
(all x all y (Cont(x,y) -> S(x) & S(y))).
(all x all y (x < y -> S(x) & S(y))).
(all x (ZEX(x) -> S(x))).
(all x all y (BCont(x,y) -> S(x) & S(y))).
(all x (PED(x) -> MaxDim(r(x)))).
(all x all y (DK1(x,y) -> P(r(x),r(y)))).
(all x all y (hosts(x,y) -> (RPF(y) <-> P(r(x),r(y))))).
(all x all y all m all n (hosts(x,y) & RPF(y) & DK1(m,x) & DK1(n,y) -> P(r(n),r(m)))).
(all x all y (hosts(x,y) -> (DPF(y) <-> -PO(r(x),r(y))))).
end_of_list.

% Reading from file  multidim_space_ped/input/ped.p9


formulas(sos).
(all x (PED(x) -> POD(x) | M(x) | F(x))).
(all x (POD(x) -> PED(x))).
(all x (M(x) -> PED(x))).
(all x (F(x) -> PED(x))).
(all x (POD(x) -> -M(x))).
(all x (POD(x) -> -F(x))).
(all x (M(x) -> -F(x))).
(all x (NAPO(x) -> POD(x))).
(all x all y (hosts(x,y) -> PED(x) & F(y))).
(all x (F(x) <-> (exists y hosts(y,x)))).
(all x all y (hosts(x,y) -> -hosts(y,x))).
(all x (F(x) <-> RPF(x) | DPF(x))).
(all x (-RPF(x) | -DPF(x))).
(all x all y (DK1(x,y) -> M(x))).
(all x all y (DK1(x,y) -> POD(y) | F(y))).
(all x all y all z (DK1(x,y) & DK1(z,y) -> x = z)).
(all y (POD(y) | RPF(y) -> (exists x DK1(x,y)))).
end_of_list.

% Reading from file  multidim_mereotopology_zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file space/input/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) & -ZEX(y) -> x < y)).
(all x all y (EqDim(x,y) <-> S(x) & S(y) & -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z (S(z) -> -(y < z & z < x))))).
(exists x MinDim(x)).
end_of_list.

% Reading from file space/input/cont_c.p9


formulas(sos).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file space/input/codi_down.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
(all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file multidim_space_codib/input/codib_down.p9


formulas(sos).
(all x (S(x) & -ZEX(x) -> (exists y (P(y,x) & Min(y))))).
(all x all y (S(x) & S(y) & BCont(x,y) -> Cont(x,y) & Inc(x,y))).
(all x all y all v all z (S(x) & S(y) & S(v) & S(z) & SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (S(x) & S(y) & S(v) & S(z) & SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (S(x) & S(y) & S(z) & BCont(x,y) & P(y,z) & (all v all w (S(v) & S(w) & P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (S(x) & S(y) & S(z) & BCont(x,y) & Cont(z,x) -> BCont(z,y))).
(all x all y (S(x) & S(y) & BCont(x,y) <-> S(x) & S(y) & -ZEX(x) & (all z (P(z,x) & Min(z) -> BCont(z,y))))).
end_of_list.

% Reading from file multidim_space_codib/input/codib_updown.p9


formulas(sos).
(all x all y all z all v (TSum(x,y,z) & TSum(x,y,v) -> S(x) & S(y) & S(z) & v = z)).
(all x all y all z (TSum(x,y,z) -> TSum(y,x,z))).
(all x all y (x < y -> TSum(x,y,y))).
(all x all y all z all v (TSum(x,y,z) & x <= y & Cont(v,y) -> Cont(v,z))).
(all x all y all z all v (TSum(x,y,z) & Cont(v,z) & -Cont(v,x) -> Cont(difference(v,x),y))).
(all x all y all z (S(z) & EqDim(x,y) & (all v (PO(v,z) <-> PO(v,x) | PO(v,y))) -> TSum(x,y,z))).
(all x all y (EqDim(x,y) & (all z (Cont(z,x) & Cont(z,y) & Min(z) -> (exists u exists v (P(u,x) & P(v,y) & BCont(z,u) & BCont(z,v))))) -> (exists z TSum(x,y,z)))).
(all x (S(x) & -ZEX(x) -> Cont(x,Uni))).
end_of_list.

% Reading from file multidim_space_codib/input/icon.p9


formulas(sos).
(all x (Con(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))).
(all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))).
(all x (UCon(x) <-> S(x) & Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))).
(all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file  multidim_mereotopology_codib/definitions/input/closed.p9


formulas(sos).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% Reading from file  multidim_mereotopology_codib/definitions/input/icont.p9


formulas(sos).
(all x all y (ICont(x,y) <-> Cont(x,y) & (all z (Cont(z,x) -> -BCont(z,y))))).
end_of_list.

% Reading from file  multidim_mereotopology_codib/definitions/input/tcont.p9


formulas(sos).
(all x all y (TCont(x,y) <-> Cont(x,y) & (exists z (Cont(z,x) & BCont(z,y))))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file space/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file multidim_space_voids/theorems/input/voids_extended_theorems_1.p9


formulas(goals).
(all x (V(x) -> Hole(x) | Gap(x))).
end_of_list.
